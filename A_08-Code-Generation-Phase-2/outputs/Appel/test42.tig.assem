.data
$LowerBoundErr$$:
.asciiz "Runtime error: array index less than zero\n"

.data
$ChrErr$$:
.asciiz "Runtime error: Illegal ASCII code for chr\n"

.data
$SubStrErr$$:
.asciiz "Runtime error: Access to illegal location in substring\n"

$UpperBoundErr$$:
.asciiz "Runtime error: array index greater than array size\n"

.data
$NullErr$$:
.asciiz "Runtime error: attempt to access fields of a null record\n"

.data
$SizeErr$$:
.asciiz "Runtime error: only positive size array objects can be created\n"

.data
$NewLine$$:
.asciiz "\n"

.data
$Dummy$$:
.asciiz "Dummy string\n"

.text
.globl main
main:
jal $Main$$
li $v0, 10
syscall

.text
$NullExit$$:
la $a0, $NullErr$$
li $v0, 4
syscall
li $v0, 10
syscall

.text
$LowerBoundExit$$:
la $a0, $LowerBoundErr$$
li $v0, 4
syscall
li $v0, 10
syscall

.text
$UpperBoundExit$$:
la $a0, $UpperBoundErr$$
li $v0, 4
syscall
li $v0, 10
syscall

.text
$SizeError$$:
la $a0, $SizeErr$$
li $v0, 4
syscall
li $v0, 10
syscall

.text
$Malloc$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
li $v0,9
syscall
la $sp,4($fp)
lw $ra,-4($fp)
lw $fp,($fp)
jr $ra

.text
$StringLength$$:
move $t4,$zero
move $t2,$a0
NEXTSL:
lbu $t3,($t2)
beq $t3,$zero,ENDLENGTH
addi $t2,$t2,1
addi $t4,$t4,1
j NEXTSL
ENDLENGTH:
move $v0,$t4
jr $ra

# 0 - equal
# 1 - left is greater
# 2 - right is greater

.text
$StringComp$$:
sw $fp,-12($sp)
la $fp,-4($sp)
la $sp,-16($fp)
sw $ra,-12($fp)
sw $a0,-4($fp)
sw $a1,($fp)
jal $StringLength$$
sw $v0,-16($fp)
lw $a0,($fp)
jal $StringLength$$
lw $t7,-16($fp)
lw $t8,-4($fp)
lw $t9,($fp)
blt $t7,$v0,COMPLOOP
move $t7,$v0
COMPLOOP:
beq $t7,$zero,EX1
lbu $t5,($t8)
lbu $t6,($t9)
bne $t5,$t6,EX2
sub $t7,$t7,1
addi $t8,$t8,1
addi $t9,$t9,1
j COMPLOOP
EX1:
lbu $t5,($t8)
bne $t5,$zero,LGT
lbu $t6,($t9)
beq $t6,$zero,EQ
li $v0,2
j EX
EQ:
li $v0,0
j EX
EX2:
blt $t5,$t6,LLT
LGT:
li $v0,1
j EX
LLT:
li $v0,2
EX:
la $sp,4($fp)
lw $ra,-12($fp)
lw $fp,-8($fp)
jr $ra

.text
$StringEqual$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
jal $StringComp$$
beq $v0,$zero,EQ1
li $v0,0
j EQEX
EQ1:
li $v0,1
EQEX:
la $sp,4($fp)
lw $ra,-4($fp)
lw $fp,($fp)
jr $ra

.text
$StringLT$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
jal $StringComp$$
li $t3,2
beq $v0,$t3,LT1
li $v0,0
j LTEX
LT1:
li $v0,1
LTEX:
la $sp,4($fp)
lw $ra,-4($fp)
lw $fp,($fp)
jr $ra

.text
$StringLEQ$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
jal $StringComp$$
li $t3,2
beq $v0,$t3,LEQ1
beq $v0,$zero,LEQ1
li $v0,0
j LEQEX
LEQ1:
li $v0,1
LEQEX:
la $sp,4($fp)
lw $ra,-4($fp)
lw $fp,($fp)
jr $ra

.text
$InitArray$$:
sw $fp,-12($sp)
la $fp,-4($sp)
la $sp,-12($fp)
sw $a1,($fp)
sw $a0,-4($fp)
sw $ra,-12($fp)
add $a0,$a0,1
mul $a0,$a0,4
li $v0,9
syscall
lw $t0,-4($fp)
sw $t0,($v0)
move $t1,$v0
lw $t2,($fp)
$CALoop$$:
beqz $t0, $CAEnd$$
add $t1,$t1,4
sw $t2,($t1)
sub $t0,$t0,1
j $CALoop$$
$CAEnd$$:
la $sp,4($fp)
lw $ra,-12($fp)
lw $fp,-8($fp)
jr $ra

.text
$Print$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
move $a0,$a1
li $v0,4
syscall
lw $ra,-4($fp)
la $sp,4($fp)
lw $fp,($fp)
jr $ra

# doesn't seem possible to do anything more with SPIM
.text 
$Flush$$:
jr $ra

.text
$GetChar$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-8($fp)
sw $ra,-4($fp)
li $a0,2
li $v0,9
syscall
sw $v0,-8($fp)
move $a0,$v0
li $a1,2
li $v0,8
syscall
lw $v0,-8($fp)
la $sp,4($fp)
lw $ra,-4($fp)
lw $fp,($fp)
jr $ra

.text
$Ord$$:
lbu $v0,($a1)
bne $v0,$zero,NL
li $v0,-1
NL:
jr $ra

.text
$Chr$$:
blt $a1,$zero,ERR
bgt $a1,255,ERR
sw $fp,-8($sp)
la $fp,-4($sp)
la $sp,-8($fp)
sw $ra,-8($fp)
sw $a1,($fp)
li $a0,4
li $v0,9
syscall
lw $t0,($fp)
sb $t0,($v0)
sb $zero,1($v0)
la $sp,4($fp)
lw $ra,-8($fp)
lw $fp,-4($fp)
jr $ra
ERR:
la $a0,$ChrErr$$
li $v0,4
syscall
li $v0,10
syscall

.text
$Exit$$:
li $v0,10
syscall

.text
$Not$$:
beq $a1,$zero,EQZERO
li $v0,0
jr $ra
EQZERO:
li $v0,1
jr $ra

.text
$SubString$$:
sw $fp,-16($sp)
la $fp,-4($sp)
la $sp,-16($fp)
sw $ra,-16($fp)
sw $a1,-8($fp)
sw $a2,-4($fp)
sw $a3,($fp)
blt $a2,$zero,SubErr
move $a0,$a1
jal $StringLength$$
lw $t1,-4($fp)
lw $t2,($fp)
add $t0,$t1,$t2
blt $v0,$t0,SubErr
addi $a0,$t2,1
li $v0,9
syscall
move $t0,$v0
lw $t1,-8($fp)
lw $t2,-4($fp)
lw $t3,($fp)
add $t1,$t1,$t2
SSLoop:
ble $t3,$zero,FinSub
lbu $t2,($t1)
sb $t2,($t0)
addi $t0,$t0,1
addi $t1,$t1,1
sub $t3,$t3,1
j SSLoop
FinSub:
sb $zero,($t0)
lw $ra,-16($fp)
la $sp,4($fp)
lw $fp,-12($fp)
jr $ra
SubErr:
la $a0,$SubStrErr$$
li $v0,4
syscall
li $v0,10
syscall

.text
$Concat$$:
sw $fp,-12($sp)
la $fp,-4($sp)
la $sp,-20($fp)
sw $ra,-12($fp)
sw $a2,($fp)
sw $a1,-4($fp)
move $a0,$a1
jal $StringLength$$
sw $v0,-16($fp)
lw $a0,($fp)
jal $StringLength$$
sw $v0,-20($fp)
lw $t0,-16($fp)
add $a0,$t0,$v0
addi $a0,$a0,1
li $v0,9
syscall
move $t0,$v0
lw $t1,-16($fp)
lw $t2,-4($fp)
lw $t3,-20($fp)
lw $t4,($fp)
CopyOne:
ble $t1,$zero,CopyTwo
lbu $t5,($t2)
sb $t5,($t0)
addi $t2,$t2,1
addi $t0,$t0,1
sub $t1,$t1,1
j CopyOne
CopyTwo:
ble $t3,$zero,FinCat
lbu $t5,($t4)
sb $t5,($t0)
addi $t4,$t4,1
addi $t0,$t0,1
sub $t3,$t3,1
j CopyTwo
FinCat:
sb $zero,($t0)
lw $ra,-12($fp)
la $sp,4($fp)
lw $fp,-8($fp)
jr $ra


.text
$Size$$:
sw $fp,-4($sp)
la $fp,-4($sp)
la $sp,-4($fp)
sw $ra,-4($fp)
move $a0,$a1
jal $StringLength$$
lw $ra,-4($fp)
la $sp,4($fp)
lw $fp($fp)
jr $ra

.data
.align 2
L1:
.asciiz " "

.data
.align 2
L0:
.asciiz " "

.data
.align 2
L398:
.asciiz "aname"

.data
.align 2
L399:
.asciiz "somewhere"

.data
.align 2
L402:
.asciiz ""

.data
.align 2
L405:
.asciiz "Kapoios"

.data
.align 2
L406:
.asciiz "Kapou"

.data
.align 2
L407:
.asciiz "Allos"

.data
.align 2
L424:
.asciiz "kati"

.data
.align 2
L435:
.asciiz "sfd"

.data
.align 2
L438:
.asciiz "sdf"

.text
$Main$$:
sw $fp,-8($sp)
la $fp,-4($sp)
la $sp,-32($fp)
L451:
sw $a0,0($fp)
sw $s0,-28($fp)
sw $s1,-24($fp)
sw $s2,-20($fp)
sw $s3,-16($fp)
sw $s4,-12($fp)
sw $s5,-8($fp)
sw $ra,-32($fp)
li $a0,10
li $a1,0
bltz $a0,L396
L397:
jal $InitArray$$
move $s4,$v0
li $s0,5
li $a0,16
jal $Malloc$$
la $s1,L398
sw $s1,0($v0)
la $s1,L399
sw $s1,4($v0)
li $s1,0
sw $s1,8($v0)
li $s1,0
sw $s1,12($v0)
bltz $s0,L400
L401:
move $a0,$s0
move $a1,$v0
jal $InitArray$$
move $s3,$v0
li $a0,100
la $a1,L402
bltz $a0,L403
L404:
jal $InitArray$$
move $s2,$v0
li $a0,16
jal $Malloc$$
la $s0,L405
sw $s0,0($v0)
la $s0,L406
sw $s0,4($v0)
li $s0,2432
sw $s0,8($v0)
li $s0,44
sw $s0,12($v0)
move $s1,$v0
li $a0,8
jal $Malloc$$
move $s0,$v0
la $s5,L407
sw $s5,0($s0)
addi $s5,$s0,4
li $a0,3
li $a1,1900
bltz $a0,L408
L409:
jal $InitArray$$
sw $v0,($s5)
li $t0,0
lw $s5,($s4)
ble $s5,$t0,L410
L411:
bltz $t0,L412
L413:
li $t1,1
addi $t0,$t0,1
li $s5,4
mul $s5,$s5,$t0
add $s5,$s4,$s5
sw $t1,($s5)
li $t0,9
lw $s5,($s4)
ble $s5,$t0,L414
L415:
bltz $t0,L416
L417:
li $t1,3
addi $t0,$t0,1
li $s5,4
mul $s5,$s5,$t0
add $s4,$s4,$s5
sw $t1,($s4)
li $s5,3
lw $s4,($s3)
ble $s4,$s5,L418
L419:
bltz $s5,L420
L421:
addi $s5,$s5,1
li $s4,4
mul $s4,$s4,$s5
add $s4,$s3,$s4
lw $s5,($s4)
la $s4,L0
beq $s5,$s4,L422
L423:
la $s4,L424
sw $s4,0($s5)
li $s5,1
lw $s4,($s3)
ble $s4,$s5,L425
L426:
bltz $s5,L427
L428:
addi $s5,$s5,1
li $s4,4
mul $s4,$s4,$s5
add $s3,$s3,$s4
lw $s4,($s3)
la $s3,L0
beq $s4,$s3,L429
L430:
li $s3,23
sw $s3,12($s4)
li $s4,34
lw $s3,($s2)
ble $s3,$s4,L431
L432:
bltz $s4,L433
L434:
la $s5,L435
addi $s4,$s4,1
li $s3,4
mul $s3,$s3,$s4
add $s2,$s2,$s3
sw $s5,($s2)
la $s2,L0
beq $s1,$s2,L436
L437:
la $s2,L438
sw $s2,0($s1)
la $s1,L0
beq $s0,$s1,L439
L440:
lw $s4,4($s0)
li $s2,0
lw $s1,($s4)
ble $s1,$s2,L441
L442:
bltz $s2,L443
L444:
li $s3,2323
addi $s2,$s2,1
li $s1,4
mul $s1,$s1,$s2
add $s1,$s4,$s1
sw $s3,($s1)
la $s1,L0
beq $s0,$s1,L445
L446:
lw $s3,4($s0)
li $s1,2
lw $s0,($s3)
ble $s0,$s1,L447
L448:
bltz $s1,L449
L450:
li $s2,2323
addi $s1,$s1,1
li $s0,4
mul $s0,$s0,$s1
add $s0,$s3,$s0
sw $s2,($s0)
li $v0,0
lw $s0,-28($fp)
lw $s1,-24($fp)
lw $s2,-20($fp)
lw $s3,-16($fp)
lw $s4,-12($fp)
lw $s5,-8($fp)
lw $ra,-32($fp)
j L395
L396:
jal $SizeError$$
j L395
L400:
jal $SizeError$$
j L395
L403:
jal $SizeError$$
j L395
L408:
jal $SizeError$$
j L395
L410:
jal $UpperBoundExit$$
j L395
L412:
jal $LowerBoundExit$$
j L395
L414:
jal $UpperBoundExit$$
j L395
L416:
jal $LowerBoundExit$$
j L395
L418:
jal $UpperBoundExit$$
j L395
L420:
jal $LowerBoundExit$$
j L395
L422:
jal $NullExit$$
j L395
L425:
jal $UpperBoundExit$$
j L395
L427:
jal $LowerBoundExit$$
j L395
L429:
jal $NullExit$$
j L395
L431:
jal $UpperBoundExit$$
j L395
L433:
jal $LowerBoundExit$$
j L395
L436:
jal $NullExit$$
j L395
L439:
jal $NullExit$$
j L395
L441:
jal $UpperBoundExit$$
j L395
L443:
jal $LowerBoundExit$$
j L395
L445:
jal $NullExit$$
j L395
L447:
jal $UpperBoundExit$$
j L395
L449:
jal $LowerBoundExit$$
j L395
L395:
la $sp,4($fp)
lw $fp,-8($sp)
jr $ra

